@use 'sass:math';

$max: 2000;
$step: 100;
$cardSize: 100;

[data-generation-section] {
  padding: 24px 16px;
  display: grid;
  gap: 16px;
  margin: auto;
  width: fit-content;

  nav {
    --rows: round(up, calc(var(--size) / var(--columns)), 1);
    --gap: 16px;
    display: grid;
    grid-template-columns: repeat(var(--columns), #{$cardSize}px);
    grid-template-rows: repeat(var(--rows), #{$cardSize}px);
    gap: var(--gap);
  }

  a {
    animation-timeline: view(block);
    animation-name: pokemon-list-entry;
    animation-duration: 1ms;
    animation-fill-mode: both;
    contain: strict;
    contain-intrinsic-block-size: 100px;
    contain-intrinsic-inline-size: 100px;
  }

  @for $i from 400 through $max {
    @if ($i) % $step == 0 {
      @media (min-width: #{$i}px) and (max-width: #{$i + $step - 1}px) {
        --columns: #{math.ceil(math.div($i, 140))};
      }
    }
  }
  @media (min-width: 2000px) {
    --columns: 14;
  }
  @media (max-width: 400px) {
    --columns: 3;
    gap: 8px;
    a img {
      width: 90px;
      height: 90px;
    }
  }
}

html:active-view-transition-type(page-transition) {
  [data-generation-section] a {
    animation-name: pokemon-list-entry, viewport-transition;
  }
}

@keyframes pokemon-list-entry {
  0% {
    transform: translateY(var(--translate-y, 0)) scale(var(--scale, 0));
    opacity: 0.2;
  }
  20%, 80% {
    transform: translateY(0) scale(1);
    opacity: 1;
  }
  100% {
    transform: translateY(calc(-0.3 * var(--translate-y, 0))) scale(var(--scale, 0));
    opacity: 0.2;
  }
}
